/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.examples.state.agendagroup
 
import org.drools.examples.state.State

declare type State
    @propertyChangeSupport
end
 
rule Bootstrap
    when
        a : State(name == "A", state == State.NOTRUN )
    then
        System.out.println(a.getName() + " finished" );
        a.setState( State.FINISHED );
        // If an attribute of an object changes does not necessarily mean
        // the rule engine will notice the change. We can use "Modify" or @propertyChangeSupport
        // to notify the engine. Note: the setter method of the object must implement
        // a litter extra code for the notification. 
end

 
rule "A to B"
    when
        State(name == "A", state == State.FINISHED )
        b : State(name == "B", state == State.NOTRUN )
    then
        System.out.println(b.getName() + " finished" );
        b.setState( State.FINISHED );
end

rule "B to C"
        agenda-group "B to C"
        auto-focus true
        /Rule "B to C" and "B to D" will be activated at the same time which result
        //in a conflict. Solution 2: set a new anagenda-group rather than the default
        //"Main" group. A groupâ€™s rules will only fire when the group receives the focus. 
        //This can be achieved either by using the method by setFocus() or the rule attribute auto-focus. 
    when
        State(name == "B", state == State.FINISHED )
        c : State(name == "C", state == State.NOTRUN )
    then
        System.out.println(c.getName() + " finished" );
        c.setState( State.FINISHED );
        drools.getKnowledgeRuntime().getAgenda().getAgendaGroup( "B to D" ).setFocus();
end

rule "B to D"
    agenda-group "B to D"
    when
        State(name == "B", state == State.FINISHED )
        d : State(name == "D", state == State.NOTRUN )
    then
        System.out.println(d.getName() + " finished" );
        d.setState( State.FINISHED );
end
